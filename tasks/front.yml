---
- name: Copy 'is_cluster_ready' file
  copy: dest=/bin/is_cluster_ready src=is_cluster_ready mode=0755

# Manage the /etc/hosts file
- name: Edit /etc/hosts file
  shell: |
    for i in `seq 1 {{max_number_of_nodes}}`; do
      item="{{vnode_prefix}}${i}";
      grep -q "\<${item}\>" /etc/hosts || echo "127.0.0.1 ${item} ${item}.localdomain" >> /etc/hosts;
    done

- name: Set ZooKeeper URL # used for leader election amongst masters
  copy:
    content: "zk://{{ansible_default_ipv4.address}}:2181/mesos"
    dest: /etc/mesos/zk
    mode: 0644

- block:
#  - name: start up zookeeper in Centos 6
#    command: /usr/lib/zookeeper/bin/zkServer.sh start
#    when: ansible_distribution_major_version == "6"

  - block:
#    - name: start up zookeeper in Centos 7
#      service: name=zookeeper state=started enabled=yes

    # Disable mesos-slave in Redhat
    - name: Stop the Mesos Slave service
      command: systemctl stop mesos-slave.service

    - name: Disable the Mesos Slave service
      command: systemctl disable mesos-slave.service

    when: ansible_distribution_major_version == "7"

  when: ansible_os_family == "RedHat"

- block:
#  - name: start up zookeeper in Deb systems
#    service: name=zookeeper state=started enabled=yes

  # Master tasks
  - name: Stop the Mesos Slave service
    service: name=mesos-slave state=stopped

  - name: Disable the Mesos Slave service
    copy:
      content: "manual"
      dest: /etc/init/mesos-slave.override
      mode: 0644

  when: ansible_os_family == "Debian"

- name: Set Mesos Master hostname
  copy:
    content: "{{ansible_default_ipv4.address}}"
    dest: /etc/mesos-master/hostname
    mode: 0644

- name: Set Mesos framework authentication (frameworks)
  copy:
    content: "true"
    dest: /etc/mesos-master/authenticate_frameworks
    mode: 0600

- name: Set Mesos framework authentication (credentials)
  copy:
    content: "/usr/etc/mesos/credentials"
    dest: /etc/mesos-master/credentials
    mode: 0600

- name: Set Mesos security keys
  copy:
    content: '{"credentials":[ {"principal": "{{principal}}", "secret": "{{secret}}" } ] }'
    dest: /usr/etc/mesos/credentials
    mode: 0600

# Tambien se puede configurar la ip del master con (export MESOS_IP=158.42.104.229)
- name: Set Mesos Master ip (debian)
  copy:
    content: "{{ansible_default_ipv4.address}}"
    dest: /etc/mesos-master/ip
    mode: 0644

- name: Set Mesos Master quorum count
  copy:
    content: "{{quorum}}"
    dest: /etc/mesos-master/quorum
    mode: 0644

- name: start up the mesos-master in Deb systems
  service: name=mesos-master state=started enabled=yes
  when: ansible_os_family == "Debian"

- name: start up the mesos-master in Centos 7
  service: name=mesos-master state=started enabled=yes
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: start up the mesos-master in Centos 6
  command: start mesos-master
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

- name: Create clues2 directory
  file: path=/etc/clues2/ state=directory

- name: Create mesos nodes info file
  copy:
    content: |
       {% for number in range(1, NNODES|int + 1) %}
       {{vnode_prefix}}{{number}}
       {% endfor %}
    dest: "/etc/clues2/mesos_vnodes.info"
    
# Marathon-LB installation (may be moved to marathon role)
- name: Install pip if needed on Debian
  apt:
    pkg: python-pip
    state: present
    update_cache: yes
  when: "ansible_os_family == 'Debian'"

- name: Install pip if needed on Redhat
  yum:
    pkg: python-pip
    state: present
    update_cache: yes
  when: "ansible_os_family == 'RedHat'"

- name: Install docker container dependencies
  pip:
    executable: /usr/bin/pip
    name: docker-py
    
- name: Run Marathon-LB container
  docker_container:
    name: marathon-lb
    image: mesosphere/marathon-lb
    state: started
    privileged: yes
    detach: True
    restart_policy: always
    network_mode: host
    env: 
      PORTS: 9090,10000,10001,10002,10003,10004,10005,10006,10007,10008,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019,10020,10021,10022,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033,10034,10035,10036,10037,10038,10039,10040,10041,10042,10043,10044,10045,10046,10047,10048,10049,10050,10051,10052,10053,10054,10055,10056,10057,10058,10059,10060,10061,10062,10063,10064,10065,10066,10067,10068,10069,10070,10071,10072,10073,10074,10075,10076,10077,10078,10079,10080,10081,10082,10083,10084,10085,10086,10087,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100
    hostname: "{{ ansible_hostname }}"
    command: "sse --group external --group internal --health-check --marathon http://localhost:8080 --auth-credentials=ubuntu:ubuntu_secret"
